{"version":3,"file":"static/js/860.1e587a6c.chunk.js","mappings":"0NACA,GAAiB,E,SCQXA,EAAS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACrB,OACI,iCACI,qCAAaD,MACb,cAAGE,UAAWC,EAAAA,EAAd,SAAsBF,MAGjC,EASKG,EAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,OACI,wBACKA,EAAQC,KAAI,SAAAC,GAAM,OAAI,yBACf,SAACR,EAAD,CAAQC,OAAQO,EAAOP,OAAQC,QAASM,EAAON,WADvBM,EAAOC,GAApB,KAM9B,EAwCD,EAhCgB,WACZ,IAAOA,GAAMC,EAAAA,EAAAA,MAAND,GAEP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KACA,GAAoCD,EAAAA,EAAAA,UAAS,IAA7C,eAAOE,EAAP,KAAmBC,EAAnB,KAoBA,OAjBAC,EAAAA,EAAAA,YAAU,WACND,EAAc,eACdE,EAAAA,EAAAA,IAAWP,GACNQ,MAAK,SAAAC,GAEsB,IAApBA,EAASC,OACTL,EAAc,8CAEdA,EAAc,IACdF,EAAWM,GAElB,IACAE,OAAM,kBAAMN,EAAc,uBAApB,GAEd,GAAE,CAACL,KAIA,iBAAKN,UAAU,YAAf,WACI,uBAAIU,KACJ,SAACR,EAAD,CAAaC,QAASA,MAGjC,C,qBCxED,SAASe,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOb,KAAKQ,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C,uJClCMC,EAAS,mCAEFC,EAAW,6BAAG,sGACAC,MAAM,2DAAD,OAA4DF,IADjE,cACjBzB,EADiB,gBAEJA,EAAS4B,OAFL,cAEjBA,EAFiB,yBAGhBA,EAAKC,SAHW,2CAAH,qDAMXC,EAAU,6BAAG,WAAOvC,GAAP,yFACCoC,MAAM,sCAAD,OAAuCpC,EAAvC,oBAAqDkC,IAD3D,cAChBzB,EADgB,gBAEHA,EAAS4B,OAFN,cAEhBA,EAFgB,yBAIfA,GAJe,2CAAH,sDAOVG,EAAO,6BAAG,WAAOxC,GAAP,yFACIoC,MAAM,sCAAD,OAAuCpC,EAAvC,4BAA6DkC,IADtE,cACbzB,EADa,gBAEAA,EAAS4B,OAFT,cAEbA,EAFa,yBAIZA,EAAKI,MAJO,2CAAH,sDAOPlC,EAAU,6BAAG,WAAOP,GAAP,yFACCoC,MAAM,sCAAD,OAAuCpC,EAAvC,4BAA6DkC,IADnE,cAChBzB,EADgB,gBAEHA,EAAS4B,OAFN,cAEhBA,EAFgB,yBAIfA,EAAKC,SAJU,2CAAH,sDAOVI,EAAS,6BAAG,WAAOC,GAAP,yFACEP,MAAM,mDAAD,OAAoDO,EAApD,oBAAuET,IAD9E,cACfzB,EADe,gBAEFA,EAAS4B,OAFP,cAEfA,EAFe,yBAIdA,EAAKC,SAJS,2CAAH,qD","sources":["webpack://react-homework-template/./src/styles/Reviews.module.css?109a","components/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviews } from \"services/api\"\nimport css from \"../styles/Reviews.module.css\"\nimport PropTypes from \"prop-types\"\n\n\n// Review Item -----\n\nconst Review = ({author, content}) => {\n    return(\n        <>\n            <h4>Author: {author}</h4>\n            <p className={css.p}>{content}</p>\n        </>\n    )\n}\n\nReview.propTypes = {\n    author: PropTypes.string,\n    content: PropTypes.string\n}\n\n// ReviewList ----------------------\n\nconst ReviewsList = ({reviews}) => {\n    return(\n        <ul>\n            {reviews.map(review => <li key={review.id}>\n                    <Review author={review.author} content={review.content}/>\n                 </li>\n            )} \n        </ul>\n    )\n}\n\nReviewsList.propTypes = {\n    reviews: PropTypes.array\n}\n\n// Reviews --------------------\n\nconst Reviews = () => {\n    const {id} = useParams()\n   \n    const [reviews, setReviews] = useState([])\n    const [anyReviews, setAnyReviews] = useState('')\n\n\n    useEffect(() => {\n        setAnyReviews(\"Loading...\")\n        getReviews(id)\n            .then(response =>{\n                //console.log('response', response)\n                if (response.length === 0) {\n                    setAnyReviews(\"We don't have any reviews for this movie.\")\n                } else {\n                    setAnyReviews('')\n                    setReviews(response)\n                }\n            })\n            .catch(() => setAnyReviews(\"Something went wrong\"))\n\n    }, [id])\n\n\n    return (\n        <div className=\"container\">\n            <p>{anyReviews}</p>\n            <ReviewsList reviews={reviews}/>\n        </div>\n    )\n}\n\nexport default Reviews","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const ApiKey = '0a3a4e00d84de20a8f1b6dfc8a7cdfd5';\n\nexport const getTrending = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${ApiKey}`);\n    const json = await response.json();\n    return json.results;\n}\n\nexport const getDetails = async (id) => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json)\n    return json\n}\n\nexport const getCast = async (id) => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json.cast[0])\n    return json.cast\n}\n\nexport const getReviews = async (id) => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json.results)\n    return json.results\n}\n\nexport const getMovies = async (keyword) => {\n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${keyword}&api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json.results)\n    return json.results\n\n}"],"names":["Review","author","content","className","css","ReviewsList","reviews","map","review","id","useParams","useState","setReviews","anyReviews","setAnyReviews","useEffect","getReviews","then","response","length","catch","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ApiKey","getTrending","fetch","json","results","getDetails","getCast","cast","getMovies","keyword"],"sourceRoot":""}