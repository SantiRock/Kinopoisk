{"version":3,"file":"static/js/439.3a9cefcc.chunk.js","mappings":"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","sources":["webpack://Kinopoisk/./src/styles/cast.module.css?f1ed","components/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"cast_container__FIYrB\",\"cast\":\"cast_cast__J6Ps8\",\"actor\":\"cast_actor__0RDOF\",\"p\":\"cast_p__YzDIV\",\"anycast\":\"cast_anycast__InUKj\"};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { getCast } from \"services/api\"\nimport css from '../styles/cast.module.css'\nimport PropTypes from \"prop-types\"\n\n/// CastItem --------\n\nconst imge_path = 'https://image.tmdb.org/t/p/w200'\n\nconst CastItem = ({ image, name, character }) => {\n    let photo;\n\n    const photopad = () => {\n        if(!image) {\n            photo = 'https://via.placeholder.com/200x300?text=No+poster+available';\n            return\n        } else {\n            photo = imge_path + image;\n        }\n    }\n\n    photopad();\n    return(\n        <>\n            <img src={photo} alt={name}/>\n            <p className={css.p}>{name}</p>\n            <p className={css.p}>as {character}</p>\n        </>\n    )\n}\n\nCastItem.propTypes = {\n    image: PropTypes.string,\n    name: PropTypes.string,\n    character: PropTypes.string\n}\n\n\n// CastList --------------------\n\nconst CastList = ( {cast} ) => {\n    return(\n        <ul className={css.cast}>\n            {cast.map(actor => <li className={css.actor} key={actor.id}>\n                <CastItem name={actor.name} image={actor.profile_path} character={actor.character} />\n                </li>)}\n        </ul>\n    )\n}\n\nCastList.propTypes = {\n    cast: PropTypes.array\n}\n\n\n// Cast ---------------------------\n\nconst Cast = () => {\n    const {id} = useParams();\n    const [cast, setCast] = useState([]);\n    const [anyCast, setAnyCast] = useState('');\n\n    useEffect(() => {\n        setAnyCast(\"Loading ...\")\n        getCast(id)\n            .then(response => {\n                if (response.length === 0) {\n                    setAnyCast(\"We don't have any cast for this movie\")\n                } else {\n                    setCast(response);\n                    setAnyCast('');\n                }\n            })\n            .catch(() => setAnyCast(\"Something went wrong\"))\n    }, [id])\n\n    return (\n        <div className={css.container}>\n            <p className={css.anycast}>{anyCast}</p>\n            <CastList cast={cast}/>\n        </div>\n    )\n}\n\nexport default Cast\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const ApiKey = '0a3a4e00d84de20a8f1b6dfc8a7cdfd5';\n\nexport const getTrending = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${ApiKey}&per_page=10&page=1`);\n    const json = await response.json();\n    console.log(json.results);\n    return json.results;\n}\n\nexport const getDetails = async (id) => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json)\n    return json\n}\n\nexport const getCast = async (id) => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json.cast[0])\n    return json.cast\n}\n\nexport const getReviews = async (id) => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json.results)\n    return json.results\n}\n\nexport const getMovies = async (keyword) => {\n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${keyword}&api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json.results)\n    return json.results\n\n}"],"names":["CastItem","photo","image","name","character","src","alt","className","css","CastList","cast","map","actor","profile_path","id","useParams","useState","setCast","anyCast","setAnyCast","useEffect","getCast","then","response","length","catch","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ApiKey","getTrending","fetch","json","console","log","results","getDetails","getReviews","getMovies","keyword"],"sourceRoot":""}