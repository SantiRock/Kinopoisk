{"version":3,"file":"static/js/315.9506e966.chunk.js","mappings":"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","sources":["components/ErrorBoundaries.jsx","styles/MoviesListStyles.js","components/MoviesList.jsx","components/Notification.jsx","webpack://Kinopoisk/./src/styles/SearchInput.module.css?c55d","components/SearchForm.jsx","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import { Component } from \"react\";\n\nexport class ErrorBoundary extends Component {\n    state = { hasError: false};\n  \n    componentDidCatch(error, info) {\n      this.setState({hasError: true});\n      console.log(error, info)\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        return (\n            <>\n            <p></p>\n            <h2>Something went worng</h2>\n            <p>Please try again later</p>\n            </>\n\n        ) \n      }\n      return this.props.children\n    } \n  }\n  ","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Link =  styled(NavLink)`\n    text-decoration: none;\n    color: black;\n`\n","import { Link } from \"../styles/MoviesListStyles\";\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\"\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n \n    return (\n        <ul>\n            {movies.map(movie => (\n                <li key={movie.id}>\n                    <Link to={`/movies/${movie.id}`} state={{ from: location}} >\n                        {movie.original_title}\n                    </Link>\n                </li>\n            ))}\n        </ul>   \n    )\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.array\n}","import PropTypes from \"prop-types\"\n\nexport const Notification = ({notification}) => {\n    return (\n        <p\n            style={{\n                color: 'red',\n            }}\n        >\n            {notification}\n        </p>\n    )\n}\n\nNotification.propTypes = {\n    notification: PropTypes.string\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchInput_input__OPk-Z\",\"btn\":\"SearchInput_btn__VWda9\"};","import PropTypes from \"prop-types\"\nimport css from \"../styles/SearchInput.module.css\"\n\nexport const Input = ({ onSubmit, onChange }) => {\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input\n                    className={css.input}\n                    type='text'\n                    autoComplete=\"off\"\n                    name=\"movie\"\n                    onChange={(e) => onChange(e.target.value)}\n                />\n                <button className={css.btn} type='submit'>Search</button>\n            </form>\n        </>\n    )\n}\n\nInput.propTypes = {\n    onSubmit: PropTypes.func,\n    onChange: PropTypes.func\n}\n","import { MoviesList } from \"components/MoviesList\"\nimport { useEffect, useState } from \"react\"\nimport { getMovies } from \"services/api\"\nimport { Notification } from \"components/Notification\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { Input } from \"components/SearchForm\"\nimport { ErrorBoundary } from \"components/ErrorBoundaries\";\n\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const name = searchParams.get('name') ?? \"\";\n    const [movies, setMovies] = useState([])\n    const [notification, setNotification] = useState('')\n    const [loader, setLoader] = useState(false)\n\n    useEffect(() => {\n        setLoader(true)\n        getMovies(name)\n            .then(response => {\n                setMovies(response)\n                setLoader(false)\n                //setSearchParams({ name: keyword})    \n            })\n            .catch(() => {\n                setNotification(\"Something went wrong\")\n                setLoader(false)\n            })\n    }, [name])\n\n    const onSubmit = (evt) => {\n        setLoader(true)\n        evt.preventDefault();\n        const keyword = evt.currentTarget.elements.movie.value;\n        getMovies(keyword)\n            .then(response => {\n            if (response.length === 0) {\n                setNotification(\"No match\")\n                setMovies([])\n                setLoader(false)\n            } else {\n                setMovies(response)\n                setNotification(\"\")\n                setLoader(false)\n                //setSearchParams({ name: keyword})\n            }\n            })\n            .catch(() => {\n                setNotification(\"Something went wrong\")\n                setLoader(false)\n            })\n    }\n\n    const onChange = name => {\n        const nextParams = name !== '' ? { name } : {};\n        setSearchParams(nextParams)\n    }\n\n    return (\n        <div className=\"container\">\n            <ErrorBoundary>\n                <Input onSubmit={onSubmit} onChange={onChange}/>\n                <MoviesList movies={movies}/>\n                <Notification notification={notification} />\n                {loader && <h3>Loading ...</h3>}\n            </ErrorBoundary>\n        </div>\n    )\n}\n\nexport default Movies","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const ApiKey = '0a3a4e00d84de20a8f1b6dfc8a7cdfd5';\n\nexport const getTrending = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${ApiKey}&per_page=10&page=1`);\n    const json = await response.json();\n    console.log(json.results);\n    return json.results;\n}\n\nexport const getDetails = async (id) => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json)\n    return json\n}\n\nexport const getCast = async (id) => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json.cast[0])\n    return json.cast\n}\n\nexport const getReviews = async (id) => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json.results)\n    return json.results\n}\n\nexport const getMovies = async (keyword) => {\n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${keyword}&api_key=${ApiKey}`);\n    const json = await response.json();\n    //console.log(json.results)\n    return json.results\n\n}"],"names":["ErrorBoundary","state","hasError","error","info","this","setState","console","log","props","children","Component","Link","styled","NavLink","MoviesList","movies","location","useLocation","map","movie","to","id","from","original_title","Notification","notification","style","color","Input","onSubmit","onChange","className","css","type","autoComplete","name","e","target","value","useSearchParams","searchParams","setSearchParams","get","useState","setMovies","setNotification","loader","setLoader","useEffect","getMovies","then","response","catch","evt","preventDefault","keyword","currentTarget","elements","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","done","Promise","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","ApiKey","getTrending","fetch","json","results","getDetails","getCast","cast","getReviews"],"sourceRoot":""}